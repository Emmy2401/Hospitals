name: CI/CD pour le Backend (Spring Boot)

on:
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"

jobs:
  build-and-push:
    runs-on: ubuntu-22.04

    steps:
      # 1. Récupérer le code du dépôt
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Configurer JDK (Java Development Kit) - Java 23 (EA = Early Access)
      - name: Set up Java 23
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '23-ea'

      # (Optionnel) Mettre en place un cache Maven pour accélérer les builds
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2-

      # 3. Installer les dépendances (sans lancer les tests)
      - name: Install dependencies (Maven)
        run: mvn install -DskipTests=true

      # 4. Exécuter les tests unitaires
      - name: Run tests
        run: mvn test

      # 5. Construire le projet pour générer l’artefact (le .jar)
      - name: Build backend
        run: mvn clean package -DskipTests=true

      # 6. Se connecter à Docker Hub
      - name: Log in to DockerHub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }} docker.io
        #uses: docker/login-action@v2
        #with:
        #  username: ${{ secrets.DOCKERHUB_USERNAME }}
        #  password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 7. Construire l'image Docker
      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/spring-boot-backend:latest .

      # 8. Pousser l'image Docker (avec le tag SHA)
      - name: Push Docker image (SHA)
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/spring-boot-backend:latest

      # 9. (Optionnel) Tagger et pousser la même image en "latest" uniquement si on est sur la branche main
      - name: Tag and push Docker image as latest
        if: github.ref == 'refs/heads/main'
        run: |
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/spring-boot-backend:${{ github.sha }} \
                     ${{ secrets.DOCKERHUB_USERNAME }}/spring-boot-backend:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/spring-boot-backend:latest

      # 10. (Optionnel) Publier le .jar comme artefact GitHub (pour téléchargement)
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-artifact
          path: target/*.jar
